@model CIAB.Models.User
@{
    ViewBag.Title = "Login/Registeration";
}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<div id="about_top">
    <div class="container">
        <div class="row signup_login">
            <div class="col-md-6 signup_left">

                <div class="header_wrap">
                    <h3>New <span>User?</span></h3>
                    <p>Enter your account information below</p>
                </div>
                @using (Html.BeginForm("Register", "Home", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    <div class="form-group">
                        <label for="RegisterFullName">Full Name <span class="req">*</span></label>
                        @Html.TextBoxFor(x => x.registerViewModel.RegisterFullName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.registerViewModel.RegisterFullName)
                    </div>
                    <div class="form-group">
                        <label for="RegisterUserName">Username <span class="req">*</span></label>
                        @Html.TextBoxFor(x => x.registerViewModel.RegisterUserName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.registerViewModel.RegisterUserName)
                        @Html.ValidationMessage("UserNameExists")
                        @if (ViewBag.UserNameExists != null)
                        {
                            <span style="color:red">@ViewBag.UserNameExists</span>
                        }
                    </div>
                    <div class="form-group">
                        <label for="RegisterEmail">Email <span class="req">*</span></label>
                        @Html.TextBoxFor(x => x.registerViewModel.RegisterEmail, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.registerViewModel.RegisterEmail)
                    </div>
                    <div class="form-group">
                        <label for="RegisterPassword">Password <span class="req">*</span></label>
                        @Html.PasswordFor(p=>p.registerViewModel.RegisterPassword, new { @class = "form-control" })
                        @Html.ValidationMessageFor(p => p.registerViewModel.RegisterPassword)
                    </div>
                    <div class="form-group">
                        <label for="ConfirmPassword">Confirm Password <span class="req">*</span></label>
                        @Html.PasswordFor(p => p.registerViewModel.ConfirmPassword, new { @class = "form-control" })
                        @Html.ValidationMessageFor(p => p.registerViewModel.ConfirmPassword)
                    </div>
                    <button type="submit" class="btn btn-default btn-block btn-cta">Create My Account!</button>
                    <span id="helpBlock" class="help-block" style="text-align:center;font-size:12px;">By clicking "Create My Account", you're agreeing to the Term of Use &amp; Privacy Policy</span>
                }
            </div><!-- /about_header -->
            <div class="col-md-6 login_right">
                <div class="header_wrap">
                    <h3>Returning <span>User?</span></h3>
                    <p>Already a member? Enter your details below to login</p>
                </div>

                @using (Html.BeginForm("Login", "Home", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    <div class="form-group">
                        <label for="LoginUserName">Username</label>
                        @Html.TextBoxFor(x => x.loginViewModel.LoginUserName, new { @class = "form-control", placeholder = "Type your username" })
                        @Html.ValidationMessageFor(x => x.loginViewModel.LoginUserName)
                        @Html.ValidationMessage("LoginUserName")
                    </div>
                    <div class="form-group">
                        <label for="LoginPassword">Password</label>
                        @Html.PasswordFor(x => x.loginViewModel.LoginPassword, new { @class = "form-control", placeholder = "Password" })
                        @Html.ValidationMessageFor(x => x.loginViewModel.LoginPassword)
                        @Html.ValidationMessage("LoginPassword")
                        @Html.ValidationMessage("LoginError")
                    </div>
                    <div class="form-group">
                        <small>
                            <a href="@Url.Action("RequestPasswordReset", "ForgotPassword")" onclick='location.href=this.getAttribute("href")'>Forgot Password</a>
                        </small>
                    </div>
                    <button type="submit" class="btn btn-default btn-block btn-success">Login Now!</button>
                }
            </div>
        </div>
    </div>
</div>
